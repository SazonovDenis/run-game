package run.game.dao.backstage;

import run.game.dao.pojo.fact.*;
import run.game.dao.pojo.task.*;
import run.game.dao.pojo.user.*;

import java.util.*;

/**
 * Подготовка партии заданий для пользователя на очередной раунд игры (очередное тестирование).
 * <p>
 * Основное предназначение - подобрать для пользователя именно те задания,
 * которые нужны ему именно сейчас, например по наиболее плохо выученным фактам,
 * или по фактам, требующих повторения (или по иным критериям,
 * определяемые логикой выбора заданий, возможно, даже из других планов).
 * <p>
 * На входе:
 * - база фактов {@link Fact};
 * - база заданий {@link Task};
 * - успехи пользователя (предыдущие задания {@link UserTask} с ответами);
 * - план обучения пользователя {@link UserPlan} (план очередного уровня)
 * <p>
 * Этапы:
 * 1) Отбирает факты, подходящие плану пользователя;
 * 2) Сохраняет отобранные факты  {@link UserPlanFact};
 * 3) Формирует задания {@link UserTask} (формирует уникальные {@link Task} или берет готовые);
 * 4) Сохраняет задания пользователя {@link UserTask}
 */
public interface UserTaskGenerator {

    Collection<UserTask> createUserTasks(UserPlan plan);

}
